/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kongmy.srs.modules.ui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JCheckBox;
import kongmy.core.Application;
import kongmy.srs.SrsApplication;
import kongmy.srs.modules.AccessControlModule;
import kongmy.srs.modules.OntologyModule;

/**
 *
 * @author Kong My
 */
public class AccessControlDialog extends javax.swing.JDialog {

    /**
     * Creates new form AccessControlDialog
     */
    public AccessControlDialog(java.awt.Frame parent, boolean modal, AccessControlModule module) {
        super(parent, modal);
        this.module = module;
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        accessControlPanel = new javax.swing.JPanel();
        allowedScrollPane = new javax.swing.JScrollPane();
        panelAllowed = new javax.swing.JPanel();
        restrictedScrollPanel = new javax.swing.JScrollPane();
        panelRestricted = new javax.swing.JPanel();
        actionControlPanel = new javax.swing.JPanel();
        lblSelectedModule1 = new javax.swing.JLabel();
        cbxSelectedUser = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelActions = new javax.swing.JPanel();
        cbxSelectedModule = new javax.swing.JComboBox();
        lblSelectedModule = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configure Access Control");

        allowedScrollPane.setBorder(null);

        panelAllowed.setBorder(javax.swing.BorderFactory.createTitledBorder("Allowed User"));
        panelAllowed.setLayout(new javax.swing.BoxLayout(panelAllowed, javax.swing.BoxLayout.Y_AXIS));
        allowedScrollPane.setViewportView(panelAllowed);

        restrictedScrollPanel.setBorder(null);

        panelRestricted.setBorder(javax.swing.BorderFactory.createTitledBorder("Restricted User"));
        panelRestricted.setLayout(new javax.swing.BoxLayout(panelRestricted, javax.swing.BoxLayout.Y_AXIS));
        restrictedScrollPanel.setViewportView(panelRestricted);

        javax.swing.GroupLayout accessControlPanelLayout = new javax.swing.GroupLayout(accessControlPanel);
        accessControlPanel.setLayout(accessControlPanelLayout);
        accessControlPanelLayout.setHorizontalGroup(
            accessControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allowedScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restrictedScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );
        accessControlPanelLayout.setVerticalGroup(
            accessControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accessControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allowedScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(restrictedScrollPanel))
                .addContainerGap())
        );

        tabbedPane.addTab("Access Control", accessControlPanel);

        lblSelectedModule1.setText("Selected User:");

        cbxSelectedUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "lecturer", "officer", "student" }));
        cbxSelectedUser.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxSelectedUserItemStateChanged(evt);
            }
        });

        jScrollPane1.setBorder(null);

        panelActions.setBorder(javax.swing.BorderFactory.createTitledBorder("Allowed Actions:"));
        panelActions.setLayout(new javax.swing.BoxLayout(panelActions, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(panelActions);

        javax.swing.GroupLayout actionControlPanelLayout = new javax.swing.GroupLayout(actionControlPanel);
        actionControlPanel.setLayout(actionControlPanelLayout);
        actionControlPanelLayout.setHorizontalGroup(
            actionControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(actionControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actionControlPanelLayout.createSequentialGroup()
                        .addComponent(lblSelectedModule1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxSelectedUser, 0, 333, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        actionControlPanelLayout.setVerticalGroup(
            actionControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(actionControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectedModule1)
                    .addComponent(cbxSelectedUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        tabbedPane.addTab("Action Control", actionControlPanel);

        cbxSelectedModule.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Subject registration module" }));

        lblSelectedModule.setText("Selected Module:");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSelectedModule, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxSelectedModule, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSelectedModule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelectedModule))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabbedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap())
        );

        tabbedPane.getAccessibleContext().setAccessibleName("Action Control");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbxSelectedUserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxSelectedUserItemStateChanged
        RefreshActionPanel();
    }//GEN-LAST:event_cbxSelectedUserItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accessControlPanel;
    private javax.swing.JPanel actionControlPanel;
    private javax.swing.JScrollPane allowedScrollPane;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cbxSelectedModule;
    private javax.swing.JComboBox cbxSelectedUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectedModule;
    private javax.swing.JLabel lblSelectedModule1;
    private javax.swing.JPanel panelActions;
    private javax.swing.JPanel panelAllowed;
    private javax.swing.JPanel panelRestricted;
    private javax.swing.JScrollPane restrictedScrollPanel;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
    private List<String> availableActions;
    private final AccessControlModule module;

    private void initData() {
        String selectedModule = cbxSelectedModule.getSelectedItem().toString();
        OntologyModule ontologyModule = (OntologyModule) Application.getInstance().getModule(OntologyModule.class.getName());
        List<String> allowedActor = ontologyModule.getActorsFromModule(selectedModule);
        List<String> restrictedActor = ontologyModule.getActorsFromDomain(null);
        restrictedActor.removeAll(allowedActor);

        allowedActor.forEach((actor) -> {
            JCheckBox cbx = new JCheckBox(actor, true);
            cbx.addActionListener(((e)-> {
                if(cbx.isSelected()) {
                    ontologyModule.AddActorToModule(selectedModule, actor);
                    panelRestricted.remove(cbx);
                    panelAllowed.add(cbx);
                }
                else {
                    ontologyModule.RemoveActorFromModule(selectedModule, actor);
                    panelAllowed.remove(cbx);
                    panelRestricted.add(cbx);
                }
                RefreshAccessControlPanels();
            }));
            panelAllowed.add(cbx);
        });
        restrictedActor.forEach((actor) -> {
            JCheckBox cbx = new JCheckBox(actor, false);
            cbx.addActionListener(((e)-> {
                if(cbx.isSelected()) {
                    ontologyModule.AddActorToModule(selectedModule, actor);
                    panelRestricted.remove(cbx);
                    panelAllowed.add(cbx);
                }
                else {
                    ontologyModule.RemoveActorFromModule(selectedModule, actor);
                    panelAllowed.remove(cbx);
                    panelRestricted.add(cbx);
                }
                RefreshAccessControlPanels();
            }));
            panelRestricted.add(cbx);
        });
        RefreshAccessControlPanels();
        RefreshActionPanel();
    }

    public void RefreshActionPanel() {
        panelActions.removeAll();

        String selectedModule = cbxSelectedModule.getSelectedItem().toString();
        OntologyModule ontologyModule = (OntologyModule) Application.getInstance().getModule(OntologyModule.class.getName());

        availableActions = ontologyModule.getAllActions();
        availableActions.forEach((action) -> {
            JCheckBox cbx = new JCheckBox(action, false);
            cbx.addActionListener(((e)-> {
                if(cbx.isSelected())
                    ontologyModule.AddActionToModule(selectedModule, action);
                else                    
                    ontologyModule.RemoveActionFromModule(selectedModule, action);
            }));
            panelActions.add(cbx);
        });
        panelActions.validate();
    }

    public void RefreshAccessControlPanels() {
        panelAllowed.setSize(panelAllowed.getPreferredSize());
        panelRestricted.setSize(panelRestricted.getPreferredSize());
    }

    public void RefreshActionControlPanel() {
        panelActions.setSize(panelActions.getPreferredSize());
    }
}
